// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(100)
  Drink Drink[]

  @@map("categories")
}

model Drink {
  id                Int                 @id @default(autoincrement())
  koreanName        String              @map("korean_name") @db.VarChar(100)
  englishName       String              @map("english_name") @db.VarChar(100)
  category          Category            @relation(fields: [categoryId], references: [id])
  categoryId        Int                 @map("category_id")
  description       String              @db.VarChar(3000)
  isNew             Boolean             @default(false) @map("is_new")
  createdAt         DateTime?           @default(now()) @map("created_at")
  updatedAt         DateTime?           @default(now()) @updatedAt @map("updated_at")
  Image             Image[]
  DrinksOnAllergies DrinksOnAllergies[]
  Nutrition         Nutrition[]

  @@map("drinks")
}

model Image {
  id       Int    @id @default(autoincrement())
  imageUrl String @map("image_url") @db.VarChar(2000)
  drink    Drink  @relation(fields: [drinkId], references: [id])
  drinkId  Int    @map("drink_id")

  @@map("images")
}

model Allergy {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(100)
  DrinksOnAllergies DrinksOnAllergies[]

  @@map("allergies")
}

model DrinksOnAllergies {
  id        Int     @id @default(autoincrement())
  drink     Drink   @relation(fields: [drinkId], references: [id])
  drinkId   Int     @map("drink_id")
  allergy   Allergy @relation(fields: [allergyId], references: [id])
  allergyId Int     @map("allergy_id")

  @@map("drinks_allergies")
}

model Nutrition {
  id       Int   @id @default(autoincrement())
  drink    Drink @relation(fields: [drinkId], references: [id])
  drinkId  Int   @map("drink_id")
  kcal     Float @db.Double
  fat      Float @db.Double
  protein  Float @db.Double
  sodium   Float @db.Double
  sugar    Float @db.Double
  caffeine Float @db.Double

  @@map("nutritions")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique @db.VarChar(100)
  password     String    @db.VarChar(100)
  username     String?   @db.VarChar(100)
  address      String?   @db.VarChar(100)
  phoneNumber  String?   @map("phone_number")
  policyAgreed Boolean   @default(true) @map("policy_agreed")
  createdAt    DateTime? @default(now()) @map("created_at")
  updatedAt    DateTime? @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}
